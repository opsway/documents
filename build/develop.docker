ARG GOLANG_VERSION
ARG IMAGE_BASE
FROM golang:${GOLANG_VERSION}-alpine AS golang
FROM ${IMAGE_BASE}

# Installs Golang.
COPY --from=golang /usr/local/go /usr/local/go

ENV LC_ALL=en_US.UTF-8
ENV PATH=/usr/local/go/bin:/go/bin:$PATH
ENV GOPATH=/go

# Libraries used in the build process of this image.
RUN apk add --update --no-cache \
        build-base \
        bash \
        curl \
        gawk \
        git
RUN set -xe ;\
    repo="stedolan/jq" ;\
    version=$(curl -fsL "https://api.github.com/repos/${repo}/releases/latest" | grep tag_name | cut -d"\"" -f4) ;\
    curl -fsL "https://github.com/${repo}/releases/download/${version}/jq-linux64" >/usr/local/bin/jq ;\
    chmod +x /usr/local/bin/jq

# change default shell from ash to bash
RUN sed -i -e "s/bin\/ash/bin\/bash/" /etc/passwd

RUN go get -u github.com/go-swagger/go-swagger/cmd/swagger ;\
    go get -u github.com/gordonklaus/ineffassign ;\
    go get -u github.com/client9/misspell/cmd/misspell ;\
    git clone https://github.com/gojp/goreportcard.git /go/src/github.com/gojp/goreportcard ;\
    cd /go/src/github.com/gojp/goreportcard ;\
    make install ;\
    go install ./cmd/goreportcard-cli

# Define our working outside of $GOPATH (we're using go modules).
WORKDIR /src

ARG BUILD_DATE
ARG VERSION
ARG VCS_REF

# Build-time metadata as defined at http://label-schema.org
LABEL org.label-schema.build-date=${BUILD_DATE} \
      org.label-schema.name="documents:develop" \
      org.label-schema.description="Develop mode of service stateless API for render HTML into PDF" \
      org.label-schema.url="https://opsway.github.io/documents" \
      org.label-schema.vcs-ref=${VCS_REF} \
      org.label-schema.vcs-url="https://github.com/opsway/documents" \
      org.label-schema.vendor="OpsWay" \
      org.label-schema.version=${VERSION} \
      org.label-schema.schema-version="1.0"
